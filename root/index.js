var gCurSlide;

gCurSlide = null;

Reveal.initialize({
  controls: false,
  progress: false,
  slideNumber: false,
  width: 1920,
  height: 1080,
  margin: 0,
  minScale: 0.01,
  maxScale: 100,
  dependencies: [
    {
      src: 'js/math.js',
      async: true
    }
  ]
});

Reveal.addEventListener('ready', function(e) {
  var id;
  for (id in gSlides) {
    gSlides[id].onReady();
  }
  gCurSlide = e.currentSlide.id in gSlides ? gSlides[e.currentSlide.id] : null;
  if (gCurSlide != null) {
    gCurSlide.onShow(e);
    return gCurSlide.shown = true;
  }
});

Reveal.addEventListener('slidechanged', function(e) {
  console.log("slide: " + e.currentSlide.id);
  if (gCurSlide != null) {
    gCurSlide.onHide(e);
    gCurSlide.shown = false;
  }
  gCurSlide = e.currentSlide.id in gSlides ? gSlides[e.currentSlide.id] : null;
  if (gCurSlide != null) {
    gCurSlide.onShow(e);
    return gCurSlide.shown = true;
  }
});

Reveal.addEventListener('fragmentshown', function(e) {
  console.log("fragment: " + e.fragment.id);
  if (gCurSlide != null) {
    return gCurSlide.onFragementShow(e);
  }
});

Reveal.addEventListener('fragmenthidden', function(e) {
  if (gCurSlide != null) {
    return gCurSlide.onFragementHide(e);
  }
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxJQUFBOztBQUFBLFNBQUEsR0FBWTs7QUFFWixNQUFNLENBQUMsVUFBUCxDQUVJO0VBQUEsUUFBQSxFQUFjLEtBQWQ7RUFDQSxRQUFBLEVBQWMsS0FEZDtFQUVBLFdBQUEsRUFBYyxLQUZkO0VBSUEsS0FBQSxFQUFjLElBSmQ7RUFLQSxNQUFBLEVBQWMsSUFMZDtFQU9BLE1BQUEsRUFBYyxDQVBkO0VBUUEsUUFBQSxFQUFjLElBUmQ7RUFTQSxRQUFBLEVBQWMsR0FUZDtFQWVBLFlBQUEsRUFBYztJQUNWO01BQUUsR0FBQSxFQUFLLFlBQVA7TUFBcUIsS0FBQSxFQUFPLElBQTVCO0tBRFU7R0FmZDtDQUZKOztBQXNCQSxNQUFNLENBQUMsZ0JBQVAsQ0FBd0IsT0FBeEIsRUFBaUMsU0FBQyxDQUFEO0FBRTdCLE1BQUE7QUFBQSxPQUFBLGFBQUE7SUFBQSxPQUFTLENBQUEsRUFBQSxDQUFJLENBQUMsT0FBZCxDQUFBO0FBQUE7RUFDQSxTQUFBLEdBQWUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxFQUFmLElBQXFCLE9BQXhCLEdBQXFDLE9BQVMsQ0FBQSxDQUFDLENBQUMsWUFBWSxDQUFDLEVBQWYsQ0FBOUMsR0FBd0U7RUFFcEYsSUFBRyxpQkFBSDtJQUNJLFNBQVMsQ0FBQyxNQUFWLENBQWlCLENBQWpCO1dBQ0EsU0FBUyxDQUFDLEtBQVYsR0FBa0IsS0FGdEI7O0FBTDZCLENBQWpDOztBQVVBLE1BQU0sQ0FBQyxnQkFBUCxDQUF3QixjQUF4QixFQUF3QyxTQUFDLENBQUQ7RUFFcEMsT0FBTyxDQUFDLEdBQVIsQ0FBWSxTQUFBLEdBQVcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxFQUF0QztFQUVBLElBQUcsaUJBQUg7SUFDSSxTQUFTLENBQUMsTUFBVixDQUFpQixDQUFqQjtJQUNBLFNBQVMsQ0FBQyxLQUFWLEdBQWtCLE1BRnRCOztFQUlBLFNBQUEsR0FBZSxDQUFDLENBQUMsWUFBWSxDQUFDLEVBQWYsSUFBcUIsT0FBeEIsR0FBcUMsT0FBUyxDQUFBLENBQUMsQ0FBQyxZQUFZLENBQUMsRUFBZixDQUE5QyxHQUF3RTtFQUVwRixJQUFHLGlCQUFIO0lBQ0ksU0FBUyxDQUFDLE1BQVYsQ0FBaUIsQ0FBakI7V0FDQSxTQUFTLENBQUMsS0FBVixHQUFrQixLQUZ0Qjs7QUFWb0MsQ0FBeEM7O0FBZUEsTUFBTSxDQUFDLGdCQUFQLENBQXdCLGVBQXhCLEVBQXlDLFNBQUMsQ0FBRDtFQUVyQyxPQUFPLENBQUMsR0FBUixDQUFZLFlBQUEsR0FBYyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQXJDO0VBS0EsSUFBK0IsaUJBQS9CO1dBQUEsU0FBUyxDQUFDLGVBQVYsQ0FBMEIsQ0FBMUIsRUFBQTs7QUFQcUMsQ0FBekM7O0FBVUEsTUFBTSxDQUFDLGdCQUFQLENBQXdCLGdCQUF4QixFQUEwQyxTQUFDLENBQUQ7RUFLdEMsSUFBK0IsaUJBQS9CO1dBQUEsU0FBUyxDQUFDLGVBQVYsQ0FBMEIsQ0FBMUIsRUFBQTs7QUFMc0MsQ0FBMUMiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyIjLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG5cclxuZ0N1clNsaWRlID0gbnVsbFxyXG5cclxuUmV2ZWFsLmluaXRpYWxpemVcclxuXHJcbiAgICBjb250cm9scyAgICA6IGZhbHNlXHJcbiAgICBwcm9ncmVzcyAgICA6IGZhbHNlXHJcbiAgICBzbGlkZU51bWJlciA6IGZhbHNlXHJcblxyXG4gICAgd2lkdGggICAgICAgOiAxOTIwXHJcbiAgICBoZWlnaHQgICAgICA6IDEwODBcclxuXHJcbiAgICBtYXJnaW4gICAgICA6IDBcclxuICAgIG1pblNjYWxlICAgIDogMC4wMVxyXG4gICAgbWF4U2NhbGUgICAgOiAxMDBcclxuXHJcbiAgICAjIG1hdGg6XHJcbiAgICAjICAgICBtYXRoamF4OiAnanMvTWF0aEpheC5qcycsXHJcbiAgICAjICAgICBjb25maWc6ICdUZVgtQU1TX0hUTUwtZnVsbCdcclxuXHJcbiAgICBkZXBlbmRlbmNpZXM6IFtcclxuICAgICAgICB7IHNyYzogJ2pzL21hdGguanMnLCBhc3luYzogdHJ1ZSB9XHJcbiAgICBdXHJcblxyXG5cclxuUmV2ZWFsLmFkZEV2ZW50TGlzdGVuZXIgJ3JlYWR5JywgKGUpIC0+XHJcblxyXG4gICAgZ1NsaWRlc1sgaWQgXS5vblJlYWR5KCkgZm9yIGlkIG9mIGdTbGlkZXNcclxuICAgIGdDdXJTbGlkZSA9IGlmIGUuY3VycmVudFNsaWRlLmlkIG9mIGdTbGlkZXMgdGhlbiBnU2xpZGVzWyBlLmN1cnJlbnRTbGlkZS5pZCAgXSBlbHNlIG51bGxcclxuXHJcbiAgICBpZiBnQ3VyU2xpZGU/XHJcbiAgICAgICAgZ0N1clNsaWRlLm9uU2hvdyBlXHJcbiAgICAgICAgZ0N1clNsaWRlLnNob3duID0gdHJ1ZVxyXG5cclxuXHJcblJldmVhbC5hZGRFdmVudExpc3RlbmVyICdzbGlkZWNoYW5nZWQnLCAoZSkgLT5cclxuXHJcbiAgICBjb25zb2xlLmxvZyBcInNsaWRlOiAjeyBlLmN1cnJlbnRTbGlkZS5pZCB9XCJcclxuXHJcbiAgICBpZiBnQ3VyU2xpZGU/XHJcbiAgICAgICAgZ0N1clNsaWRlLm9uSGlkZSBlXHJcbiAgICAgICAgZ0N1clNsaWRlLnNob3duID0gZmFsc2VcclxuXHJcbiAgICBnQ3VyU2xpZGUgPSBpZiBlLmN1cnJlbnRTbGlkZS5pZCBvZiBnU2xpZGVzIHRoZW4gZ1NsaWRlc1sgZS5jdXJyZW50U2xpZGUuaWQgIF0gZWxzZSBudWxsXHJcblxyXG4gICAgaWYgZ0N1clNsaWRlP1xyXG4gICAgICAgIGdDdXJTbGlkZS5vblNob3cgZVxyXG4gICAgICAgIGdDdXJTbGlkZS5zaG93biA9IHRydWVcclxuXHJcblxyXG5SZXZlYWwuYWRkRXZlbnRMaXN0ZW5lciAnZnJhZ21lbnRzaG93bicsIChlKSAtPlxyXG5cclxuICAgIGNvbnNvbGUubG9nIFwiZnJhZ21lbnQ6ICN7IGUuZnJhZ21lbnQuaWQgfVwiXHJcblxyXG4gICAgIyB2aWRlbyA9IGUuZnJhZ21lbnQucXVlcnlTZWxlY3RvciAndmlkZW8nXHJcbiAgICAjIHZpZGVvLnBsYXkoKSBpZiB2aWRlbz9cclxuXHJcbiAgICBnQ3VyU2xpZGUub25GcmFnZW1lbnRTaG93IGUgaWYgZ0N1clNsaWRlP1xyXG5cclxuXHJcblJldmVhbC5hZGRFdmVudExpc3RlbmVyICdmcmFnbWVudGhpZGRlbicsIChlKSAtPlxyXG5cclxuICAgICMgdmlkZW8gPSBlLmZyYWdtZW50LnF1ZXJ5U2VsZWN0b3IgJ3ZpZGVvJ1xyXG4gICAgIyB2aWRlby5wYXVzZSgpIGlmIHZpZGVvP1xyXG5cclxuICAgIGdDdXJTbGlkZS5vbkZyYWdlbWVudEhpZGUgZSBpZiBnQ3VyU2xpZGU/XHJcblxyXG4iXX0=